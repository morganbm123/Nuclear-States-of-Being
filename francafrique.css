* {
    box-sizing: border-box;
}

/*This just stops me getting horizontal scrolling if anything overflows the width*/
body {
    overflow-x: hidden;
    background-color: black;
}
/*Just removing default browser padding/margin*/
html,
body {
  font-family: titling-gothic-fb, sans-serif;
  font-weight: 200;
  font-style: normal;
    padding: 0;
    margin: 0;
    color: #ebebeb;
}

h2 {
  /* font-family: titling-gothic-fb, sans-serif;
  font-weight: 200;
  font-style: normal; */
  font-family: titling-gothic-fb, sans-serif;
  font-weight: 400;
  font-style: normal;
}

p {
  font-family: titling-gothic-fb, sans-serif;
  font-weight: 200;
  font-style: normal;
}

.img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0.8;
  transition: opacity 0.5s;
}

.img:hover {
  opacity: 1;
}

.gallery {
  display: grid;
  grid-template-columns: repeat(16, minmax(10px, 1fr));
  grid-template-rows: repeat(10, 10vw);
  grid-gap: 16px;
  background-color: black;
}

.img-1 {
  grid-column: 1 / 3;
  grid-row:  1 / 2;
}

.img-2 {
  grid-column: 3 / 6;
  grid-row:  1 / 2;
}

.img-3 {
  grid-column: 1 / 3;
  grid-row:  2 / 4;
}

.img-4 {
  grid-column: 5 / 8;
  grid-row:  2 / 3;
}

.img-5 {
  grid-column: 3 / 4;
  grid-row: 3;
}

.img-15 {
  grid-column: 12 / 14;
  grid-row: 10;
}

.img-16 {
  grid-column: 14 / 16;
  grid-row: 10;
}
/*Flexbox gives us the flexiness we need. The top just stays put as there is no scrolling on the body due to the page never exceeding viewport height*/
.Top {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: black;
    font-size: 3rem;
    position: relative;
    z-index: 10;
    height: fit-content;
}
/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/
.Container {
    display: flex;
    overflow: hidden;
    height: 100vh;
    position: relative;
    width: 100%;
    backface-visibility: hidden;
    will-change: overflow;
}
/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/
.Left,
.Right {
    overflow: auto;
    height: auto;
    padding: .5rem;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: none;
}
/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly*/
.Left::-webkit-scrollbar,
.Right::-webkit-scrollbar {
    display: none;
}
/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
.Left {
    width: 50%;
    background-color: black;
}


.Right {
    width: 50%;
    background-color: black;
}

.par-images {
  max-width: 100%;
    height: auto;
  display:block;
    margin:auto;
    padding-bottom: 5px;
}

.plant-info {
  align-content: flex-start;
  padding-left: 10px;
}
.mine-info {
align-content: flex-start;
padding-left: 10px;

}
